require 'bundler/capistrano'
require 'capistrano-rbenv'
require 'puma/capistrano'

set :rbenv_ruby_version, '2.0.0-p247'
#set :default_environment, { "PATH" => "/usr/local/rbenv/shims:/usr/local/rbenv/bin:$PATH", "RBENV_VERSION" => "1.9.3-p0" }

set :application, 'supergum'
set :repository, 'https://github.com/asides/supergum.git'
set :scm, :git

set :branch, "master" # Ветка из которой будем тянуть код для деплоя.
#set :deploy_via, :remote_cache # Указание на то, что стоит хранить кеш репозитария локально и с каждым деплоем лишь подтягивать произведенные изменения. Очень актуально для больших и тяжелых репозитариев.

# set :scm, :git # You can set :scm explicitly or Capistrano will make an intelligent guess based on known version control directory names
# Or: `accurev`, `bzr`, `cvs`, `darcs`, `git`, `mercurial`, `perforce`, `subversion` or `none`

#ssh_options[:verbose] = :debug
set :use_sudo, false
ssh_options[:keys] = [File.join(ENV["HOME"], ".ssh", "id_rsa")]
ssh_options[:config] = false

server 'supergum@37.139.5.117:245', :app, :web, :db, :primary => true

ssh_options[:forward_agent] = true
#default_run_options[:pty] = true
default_run_options[:shell] = 'bash -l'

set :user, 'supergum'
set :group, 'supergum'
set :rails_env, 'production'

set :project_name, 'supergum'

set :deploy_to, "/home/supergum/#{ project_name }"



# if you want to clean up old releases on each deploy uncomment this:
#after "deploy:restart", "deploy:cleanup"


after 'deploy:finalize_update', 'deploy:symlink_db'

namespace :deploy do
  desc "Symlinks the database.yml"
  task :symlink_db, :roles => :app do
    run "rm -f #{release_path}/config/database.yml"
    run "ln -nfs #{deploy_to}/shared/config/database.yml #{release_path}/config/database.yml"

    run "rm -f #{release_path}/config/puma.rb"    
    run "ln -nfs #{deploy_to}/shared/config/puma.rb #{release_path}/config/puma.rb"

    #run "rm -f #{release_path}/config/puma.rb"    
    #run "ln -dnfs #{deploy_to}/shared/public/spree #{release_path}/public/spree"
  end
end


# if you're still using the script/reaper helper you will need
# these http://github.com/rails/irs_process_scripts

# If you are using Passenger mod_rails uncomment this:
# namespace :deploy do
#   task :start do ; end
#   task :stop do ; end
#   task :restart, :roles => :app, :except => { :no_release => true } do
#     run "#{try_sudo} touch #{File.join(current_path,'tmp','restart.txt')}"
#   end
# end
